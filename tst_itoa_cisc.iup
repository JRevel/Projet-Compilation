fe00  origine
fe00  debut d'execution
6f80   emplacement : 65024  (0xfe00)  ligne n° 44	main_   ldw sp, #STACK_ADRS // pile sera au dessus de STACK_ADRS
1000   emplacement : 65026  (0xfe02) 
6d80   emplacement : 65028  (0xfe04)  ligne n° 45	        ldw bp, #NIL        // bp initial (fin de liste channie d'environnements)
0000   emplacement : 65030  (0xfe06) 
6d4f   emplacement : 65032  (0xfe08)  ligne n° 50	        stw bp, -(sp)
6d9f   emplacement : 65034  (0xfe0a)  ligne n° 51	        ldw bp, sp
4eff   emplacement : 65036  (0xfe0c)  ligne n° 52	adi sp, sp, #-2 //allocation de l'espace pour x, diplacement de x : -2
fffe   emplacement : 65038  (0xfe0e) 
6080   emplacement : 65040  (0xfe10)  ligne n° 53	ldw r0, #72
0048   emplacement : 65042  (0xfe12) 
606d   emplacement : 65044  (0xfe14)  ligne n° 54	stw r0, (bp)-2
fffe   emplacement : 65046  (0xfe16) 
60ed   emplacement : 65048  (0xfe18)  ligne n° 56	ldw r0, (bp)-2
fffe   emplacement : 65050  (0xfe1a) 
604f   emplacement : 65052  (0xfe1c)  ligne n° 57	stw r0, -(sp)
0a50   emplacement : 65054  (0xfe1e)  ligne n° 58	jsr @printval_
fe32   emplacement : 65056  (0xfe20) 
4eff   emplacement : 65058  (0xfe22)  ligne n° 59	adi sp, sp, #2
0002   emplacement : 65060  (0xfe24) 
6f9d   emplacement : 65062  (0xfe26)  ligne n° 62	        ldw sp, bp        // abandonne variables locales de main
6dbf   emplacement : 65064  (0xfe28)  ligne n° 63	        ldw bp, (sp)+     // dipile ancien bp dans bp
0b00   emplacement : 65066  (0xfe2a)  ligne n° 64	        trp #EXIT_EXC     // lance trappe EXIT
0040   emplacement : 65068  (0xfe2c) 
0950   emplacement : 65070  (0xfe2e)  ligne n° 65	        jea @main_        // revient au dibut du main 
fe00   emplacement : 65072  (0xfe30) 
6d4f   emplacement : 65074  (0xfe32)  ligne n° 71	printval_ stw bp, -(sp)
6d9f   emplacement : 65076  (0xfe34)  ligne n° 72	          ldw bp, sp
4eff   emplacement : 65078  (0xfe36)  ligne n° 76	        adi sp, sp, #-8   // riserve place pour text sur pile (8 octets); 
fff8   emplacement : 65080  (0xfe38) 
6080   emplacement : 65082  (0xfe3a)  ligne n° 81	        ldw r0, #10       // charge 10 (pour base dicimale) dans r0
000a   emplacement : 65084  (0xfe3c) 
604f   emplacement : 65086  (0xfe3e)  ligne n° 82	        stw r0, -(sp)     // empile contenu de r0 (paramhtre b)
4ed0   emplacement : 65088  (0xfe40)  ligne n° 84	        adi bp, r0, #-8   // r0 = bp - 8 = adresse du tableau text
fff8   emplacement : 65090  (0xfe42) 
604f   emplacement : 65092  (0xfe44)  ligne n° 85	        stw r0, -(sp)     // empile contenu de r0 (paramhtre p)
60ed   emplacement : 65094  (0xfe46)  ligne n° 87	        ldw r0, (bp)4   // charge r0 avec x
0004   emplacement : 65096  (0xfe48) 
604f   emplacement : 65098  (0xfe4a)  ligne n° 88	        stw r0, -(sp)     // empile contenu de r0 (paramhtre i)
0a50   emplacement : 65100  (0xfe4c)  ligne n° 90	        jsr @itoa_        // appelle fonction itoa d'adresse itoa_
fe68   emplacement : 65102  (0xfe4e) 
4eff   emplacement : 65104  (0xfe50)  ligne n° 92	        adi sp, sp, #6    // nettoie la pile des paramhtres 
0006   emplacement : 65106  (0xfe52) 
4ed0   emplacement : 65108  (0xfe54)  ligne n° 97	        adi bp, r0, #-8   // r0 = bp - 8 = adresse du tableau text
fff8   emplacement : 65110  (0xfe56) 
604f   emplacement : 65112  (0xfe58)  ligne n° 98	        stw r0, -(sp)     // empile contenu de r0 (paramhtre p)
0a50   emplacement : 65114  (0xfe5a)  ligne n° 100	        jsr @print_       // appelle fonction print d'adresse print_
fec8   emplacement : 65116  (0xfe5c) 
4eff   emplacement : 65118  (0xfe5e)  ligne n° 102	        adi sp, sp, #2    // nettoie la pile des paramhtres
0002   emplacement : 65120  (0xfe60) 
6f9d   emplacement : 65122  (0xfe62)  ligne n° 104	        ldw sp, bp
6dbf   emplacement : 65124  (0xfe64)  ligne n° 105	        ldw bp, (sp)+
0200   emplacement : 65126  (0xfe66)  ligne n° 106	        rts
6d4f   emplacement : 65128  (0xfe68)  ligne n° 142	itoa_   stw bp, -(sp)
6d9f   emplacement : 65130  (0xfe6a)  ligne n° 143	        ldw bp, sp
60ed   emplacement : 65132  (0xfe6c)  ligne n° 146	        ldw r0, (bp)ITOA_I    // r0 = i    
0004   emplacement : 65134  (0xfe6e) 
61ed   emplacement : 65136  (0xfe70)  ligne n° 147	        ldw r1, (bp)ITOA_B    // r1 = b
0008   emplacement : 65138  (0xfe72) 
2320   emplacement : 65140  (0xfe74)  ligne n° 152	        ldq ASCII_SP, r3      // code ASCII de espace (SPace) -> r3
2e0a   emplacement : 65142  (0xfe76)  ligne n° 153	        ldq 10, wr            // 10 -> wr
4f1e   emplacement : 65144  (0xfe78)  ligne n° 154	        cmp r1, wr            // charge les indicateurs de b - 10
130c   emplacement : 65146  (0xfe7a)  ligne n° 155	        bne NOSIGN-$-2        // si non igal (donc si b != 10) saute en NOSIGN, sinon calcule signe
232b   emplacement : 65148  (0xfe7c)  ligne n° 156	        ldq ASCII_PLUS, r3    // charge le code ASCII du signe plus + dans r3
0c10   emplacement : 65150  (0xfe7e)  ligne n° 157	        tst r0                // charge les indicateurs de r0 et donc de i
1404   emplacement : 65152  (0xfe80)  ligne n° 158	        bge POSIT-$-2         // saute en POSIT si i >= 0
4700   emplacement : 65154  (0xfe82)  ligne n° 159	        neg r0, r0            // change le signe de r0
232d   emplacement : 65156  (0xfe84)  ligne n° 160	        ldq ASCII_MINUS, r3   // charge le code ASCII du signe moins - dans r3
0000   emplacement : 65158  (0xfe86)  ligne n° 161	POSIT   NOP                   // r3 = code ASCII de signe: SP pour aucun, - ou +
6290   emplacement : 65160  (0xfe88)  ligne n° 165	NOSIGN  ldw r2, r0            // r2 <- r0
6092   emplacement : 65162  (0xfe8a)  ligne n° 166	CNVLOOP ldw r0, r2            // r0 <- r2
4211   emplacement : 65164  (0xfe8c)  ligne n° 171	        srl r1, r1            // r1 = b/2
4c04   emplacement : 65166  (0xfe8e)  ligne n° 172	        ani r0, r4, #1        // ANd Immidiate entre r0 et 00...01 vers r4:
0001   emplacement : 65168  (0xfe90) 
4200   emplacement : 65170  (0xfe92)  ligne n° 174	        srl r0, r0            // r0 / 2 -> r0
a012   emplacement : 65172  (0xfe94)  ligne n° 175	        div r0, r1, r2        // quotient = r0 / r1 -> r2, reste' = r0 % r1 -> r0
4600   emplacement : 65174  (0xfe96)  ligne n° 176	        shl r0, r0            // r0 = 2 * reste'
e040   emplacement : 65176  (0xfe98)  ligne n° 177	        add r0, r4, r0        // r0 = reste = 2 * reste' + reste" => r0 = chiffre
4611   emplacement : 65178  (0xfe9a)  ligne n° 178	        shl r1, r1            // r1 = b
30f6   emplacement : 65180  (0xfe9c)  ligne n° 180	        adq -10, r0           // chiffre - 10 -> r0 
1404   emplacement : 65182  (0xfe9e)  ligne n° 181	        bge LETTER-$-2        // saute en LETTER si chiffre >= 10
303a   emplacement : 65184  (0xfea0)  ligne n° 182	        adq 10+ASCII_0, r0    // ajoute 10 => r0 = chiffre, ajoute code ASCII de 0 
1102   emplacement : 65186  (0xfea2)  ligne n° 184	        bmp STKCHR-$-2        // saute en STKCHR 
3041   emplacement : 65188  (0xfea4)  ligne n° 186	LETTER  adq ASCII_A, r0       // r0 = ASCII(A) pour chiffre = 10, ASCII(B) pour 11 ...
604f   emplacement : 65190  (0xfea6)  ligne n° 188	STKCHR  stw r0, -(sp)         // empile code ASCII du chiffre 
0c12   emplacement : 65192  (0xfea8)  ligne n° 190	        tst r2                // charge les indicateurs en fonction du quotient ds r2)
13de   emplacement : 65194  (0xfeaa)  ligne n° 191	        bne CNVLOOP-$-2       // boucle si quotient non nul; sinon sort
61ed   emplacement : 65196  (0xfeac)  ligne n° 196	        ldw r1, (bp)ITOA_P    // r1 pointe sur le dibut du tampon dij` alloui 
0006   emplacement : 65198  (0xfeae) 
5331   emplacement : 65200  (0xfeb0)  ligne n° 197	        stb r3, (r1)+         // copie le signe dans le tampon
60bf   emplacement : 65202  (0xfeb2)  ligne n° 198	CPYLOOP ldw r0, (sp)+         // dipile code du chiffre gauche (sur un mot) dans r0
5031   emplacement : 65204  (0xfeb4)  ligne n° 199	        stb r0, (r1)+         // copie code du chiffre dans un Byte du tampon de gauche ` droite
4ffd   emplacement : 65206  (0xfeb6)  ligne n° 200	        cmp sp, bp            // compare sp et sa valeur avant empilement des caracthres qui itait bp
13f8   emplacement : 65208  (0xfeb8)  ligne n° 201	        bne CPYLOOP-$-2       // boucle s'il reste au moins un chiffre sur la pile
2000   emplacement : 65210  (0xfeba)  ligne n° 202	        ldq NUL, r0           // charge le code du caracthre NUL dans r0
5031   emplacement : 65212  (0xfebc)  ligne n° 203	        stb r0, (r1)+         // sauve code NUL pour terminer la channe de caracthres
60ed   emplacement : 65214  (0xfebe)  ligne n° 206	        ldw r0, (bp)ITOA_P    // retourne le pointeur sur la channe de caracthres
0006   emplacement : 65216  (0xfec0) 
6f9d   emplacement : 65218  (0xfec2)  ligne n° 209	        ldw sp, bp            // sp <- bp : abandonne infos locales; sp pointe sur ancinne valeur de bp
6dbf   emplacement : 65220  (0xfec4)  ligne n° 210	        ldw bp, (sp)+         // dipile ancienne valeur de bp dans bp; sp pointe sur adresse de retour
0200   emplacement : 65222  (0xfec6)  ligne n° 212	        rts                   // retourne au programme appelant
2100   emplacement : 65224  (0xfec8)  ligne n° 220	print_     LDQ 0, R1      // R1 = taille donnies locales (ici 0) de fonction appelie
6d4f   emplacement : 65226  (0xfeca)  ligne n° 223	           STW BP, -(SP)  // empile le contenu du registre BP
6d9f   emplacement : 65228  (0xfecc)  ligne n° 224	           LDW BP, SP     // charge contenu SP ds BP qui pointe sur sa sauvegarde
ff1f   emplacement : 65230  (0xfece)  ligne n° 225	           SUB SP, R1, SP // riserve R1 octets sur la pile pour la variable locale z
60ed   emplacement : 65232  (0xfed0)  ligne n° 228	           LDW R0, (BP)4  // R0 = M[BP + 4]
0004   emplacement : 65234  (0xfed2) 
0b00   emplacement : 65236  (0xfed4)  ligne n° 231	           TRP #WRITE_EXC // lance trappe n0 WRITE_EXC: affiche texte d'adresse R0
0042   emplacement : 65238  (0xfed6) 
6f9d   emplacement : 65240  (0xfed8)  ligne n° 236	           LDW SP, BP    // charge SP avec contenu de BP: abandon infos locales
6dbf   emplacement : 65242  (0xfeda)  ligne n° 237	           LDW BP, (SP)+ // dipile ancien BP dans BP
0200   emplacement : 65244  (0xfedc)  ligne n° 239	           RTS  // retour au programme appelant
