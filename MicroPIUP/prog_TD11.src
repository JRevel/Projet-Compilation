	ORG	0xFF10
	START 	0xFFFA
RESETA	EQU	0xFFFA
ITV_TABLE EQU	0x0000
ITV_SIZE  EQU	4
INT	EQU	IRQ+INT_OFFSET
INTBIS	EQU	IRQBIS+INT_OFFSET
INT_OFFSET EQU	32
IRQ	EQU	2
IRQBIS	EQU	3
ITVA	EQU	ITV_TABLE+(INT*ITV_SIZE)
ITVB	EQU	ITV_TABLE+(INTBIS*ITV_SIZE)
CNTMA	EQU	0xFF00
CNTI	EQU	0xFF02
INIT_VALUE EQU	0
INCR_VALUE EQU	0x0010
MAX_VALUE  EQU	0x006F
INCR_INT   EQU	0x0002
SP	EQU	R15
STACKA 	EQU	0x1000

PRINT	STW	R0, -(SP)		// empile R0
	STW	R1, -(SP)		// empile R1
	LDW	R0, @CNTMA		// R0 <- CNTMA
	LDW	R1, #INCR_INT		// R1 <- INCR_INT
	ADD	R0, R1, R0		// R0 <- R0+R1
	STW	R0, @CNTMA		// CNTI <- R0
	LDW	R1, (SP)+		// dépile R1
	LDW	R0, (SP)+		// dépile R0
	ENI
	RTI

PRINTBIS STW	R0, -(SP)		// empile R0
	STW	R1, -(SP)		// empile R1
	LDW	R0, @CNTMA		// R0 <- CNTMA
	LDW	R1, #1			// R1 <- 1
	SUB	R0, R1, R0		// R0 <- R0 + R1
	STW	R0, @CNTMA		// CNTMA <- R0
	LDW	R1, (SP)+		// dépile R1
	LDW	R0, (SP)+		// dépile R0
	ENI
	RTI

PP	LDW	SP, #STACKA		//initialisation de la pile
	LDW	R0, #PRINT		// R0 <- @PRINT
	STW	R0, @ITVA		// enregistrement du premier vecteur d'interruption
	LDW	R0, #PRINTBIS		// R0 <- @PRINTBIS
	STW	R0, @ITVB		// enregistrement du second vecteur d'interruption
LPA	ENI				// on valide les interruptions
	LDW	R5, #INT
	TRP	R5
	LDW	R0, #INIT_VALUE		// R0 <- 0
	STW	R0, @CNTMA 		// CNTMA <- R0
	ENI
	DSI				// on inhibe les interruptions
LPB	ENI				// on valide les interruptions
	HLT
	LDW	R1, #INCR_VALUE
	DSI				// on inhibe les interruptions
	LDW	R0, @CNTMA		// on recharge R0
	ADD	R0, R1, R0		// R0 <- R0+10h
	LDW	R1, #MAX_VALUE		// R1 <- 6Fh
	SUB	R0, R1, R1		// si R0 >= R1
	BGE	LPA-($+2)		// alors retour à LPA
	STW	R0, @CNTMA		// CNTMA <- R0
	BMP	LPB-($+2)		// retour à LPB

	RSB 	RESETA-$
	JEA 	@PP
