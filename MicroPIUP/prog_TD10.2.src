	ORG	0xFF10	
	START	0xFFFA
SEUIL	EQU	3
RESETA	EQU	0xFFFA
SP	EQU	R15
STACKA	EQU	0x1000
INA	EQU	0xFF00
OUTA	EQU	0xFF02

DISTA	LDW	R4, (SP)+	//dépile l'adresse de retour dans R4
	LDW	R3, (SP)+	//dépile SEUIL dans R3
	LDW	R2, (SP)+	//dépile le 2è arg dans R2
	SUB	R2, R3, R2	//R2-R3 <- R2
	STW	R2, -(SP)	//empile R2
	JSR	@ABS
	STW	R4, -(SP)	//empile l'adresse de retour
	RTS			//fin DISTA

ABS	LDW	R3, (SP)+	//dépile l'adresse de retour dans R3
	LDW	R2, (SP)+	//dépile l'argument dans R2
	BGE	PL-($+2)	//si > 0 aller à PL
	NEG	R2, R2		//R2 <- (-R2)
PL	SRA	R2, R2		//R2 <- R2/2
	STW	R2, -(SP)	//empile le résultat
	STW	R3, -(SP)	//empile l'adresse de retour
	RTS			//fin ABS

DEBUT	LDW	SP, #STACKA	//Initialisation de la pile
	LDW	R2, @INA	//R2 <-INPUT

	STW	R2, -(SP)	//M[SP] <- R2
	

	STW	R2, -(SP)	//empile R2
	LDW	R2, #SEUIL	//R2 <- SEUIL
	STW	R2, -(SP)	//empile R2 (ie SEUIL)
	LDW	R4, #DISTA	//R4 <- DISTA
	JSR	(R4)		// R2 <- |R2-SEUIL|/2
	
	LDW	R2, (SP)+	//dépile le résultat dans R2
	STW	R2, @OUTA	//OUTA <- R2

	LDW	R2, (SP)+	//M[SP] <- R2

FIN	BMP	FIN-($+2)	//FIN aller à FIN


	RSB 	RESETA-$
	JEA 	@DEBUT
